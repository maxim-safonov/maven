# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Run tests
      run: mvn test
      continue-on-error: true
          
    - name: Generate Surefire Report
      if: failure()
      run: mvn surefire-report:report-only

    - name: Notify Telegram on success
      if: success()
      env:
        TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
      run: |
        curl -s -X POST https://api.telegram.org/bot${TELEGRAM_TOKEN}/sendMessage -d chat_id=${TELEGRAM_CHAT_ID} -d text="Все ок"

    - name: Notify Telegram on failure
      if: failure()
      env:
        TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
      run: |
        FAILED_TESTS=$(grep -oP '(?<=<testcase ).*?classname="\K[^"]+' target/surefire-reports/*.xml)
        TEST_NAMES=$(grep -oP '(?<=<testcase ).*?name="\K[^"]+' target/surefire-reports/*.xml)
        if [ -z "$FAILED_TESTS" ]; then
          FAILED_TESTS="Не удалось получить информацию о проваленных тестах."
        else
          IFS=$'\n' read -r -d '' -a FAILED_TESTS_ARRAY <<< "$FAILED_TESTS"
          IFS=$'\n' read -r -d '' -a TEST_NAMES_ARRAY <<< "$TEST_NAMES"
          FAILED_MESSAGE="Тесты провалены:\n"
          for i in "${!FAILED_TESTS_ARRAY[@]}"; do
            FAILED_MESSAGE+="Тест: ${TEST_NAMES_ARRAY[$i]} (Класс: ${FAILED_TESTS_ARRAY[$i]})\n"
          done
        fi
        curl -s -X POST https://api.telegram.org/bot${TELEGRAM_TOKEN}/sendMessage -d chat_id=${TELEGRAM_CHAT_ID} -d text="${FAILED_MESSAGE}"
